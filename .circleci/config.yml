# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/ruby:2.4.1-node-browsers
#
#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/postgres:9.4
#
#     working_directory: ~/ff_main/fantasy_fortuneteller
#
#     steps:
#       - checkout
#
#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "Gemfile.lock" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-
#
#       - run:
#           name: install dependencies
#           command: |
#             gem update --system
#             gem install bundler
#
#       - save_cache:
#           paths:
#             - ./vendor/bundle
#           key: v1-dependencies-{{ checksum "Gemfile.lock" }}
#
#       # Database setup
#       - run: bundle exec rake db:create
#       - run: bundle exec rake db:schema:load
#
#       # run tests!
#       - run:
#           name: bundle exec rake
#           command: |
#             mkdir /tmp/test-results
#             TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
#               circleci tests split --split-by=timings)"
#
#             bundle exec rspec \
#               --format progress \
#               --format RspecJunitFormatter \
#               --out /tmp/test-results/rspec.xml \
#               --format progress \
#               $TEST_FILES
#
#       # collect reports
#       - store_test_results:
#           path: /tmp/test-results
#       - store_artifacts:
#           path: /tmp/test-results
#           destination: test-results
#

version: 2
jobs:
  build:
    working_directory: ~/ff_main/fantasy_fortuneteller
    docker:
      - image: circleci/ruby:2.4.1
        environment:
          PGHOST: localhost
          PGUSER: fantasy_fortuneteller
          RAILS_ENV: test
      - image: postgres:9.5
        environment:
          POSTGRES_USER: fantasy_fortuneteller
          POSTGRES_DB: fantasy_fortuneteller_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      # Restore Cached Dependencies
      - type: cache-restore
        name: Restore bundle cache
        key: your-app-name-{{ checksum "Gemfile.lock" }}

      # Bundle install dependencies
      - run:
          name: install dependencies
          command: |
            gem update --system
            gem install bundler
      # - run: bundle install --path vendor/bundle

      # Cache Dependencies
      - type: cache-save
        name: Store bundle cache
        key: your-app-name-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Setup the environment
      - run: cp .sample.env .env

      # Setup the database
      - run: bundle exec rake db:setup

      # Run the tests
      - run: bundle exec rake
